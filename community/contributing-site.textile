---
layout: default
title: Contributing to the Site
cat: community
---

p. There are many places where the *elasticsearch* community (you!) would love for people to contribute, one of them is enhancing the knowledge base around *elasticsearch*. The site itself is hosted on "github":https://github.com/elasticsearch/elasticsearch.github.com and adding content to it is just a fork away.

p. Interesting places to start is to write a "tutorial":/tutorials about your usage of *elasticsearch*, or maybe record a short "video":/videos showing how you use it. Another is to fix and enhance the *elasticsearch* "guide":/guide.

p. Once the repo is "forked and cloned":https://help.github.com/articles/fork-a-repo, writing content is pretty simple with many examples already there. For example, if you are writing a tutorial, just start from an existing one. Don't worry about getting everything right, the content is what matters; we are here to help with the rest.  The source for this page is @elasticsearch.github.com/community/contribute-site.textile@ and contains examples of mark for *bolding*, @highlighting@, paragraphs and "links":http://www.w3.org/TR/html4/struct/links.html.

p. If you want to build the site, "jekyll":https://github.com/mojombo/jekyll and "RedCloth":http://redcloth.org/ are used to generate it into the default *_site* directory. Once you've installed "jekyll":https://github.com/mojombo/jekyll/wiki/Install and "RedCloth":http://redcloth.org/, head over to the working directory of your local clone to build the pthe site and serve it on port 4000.

<pre class="prettyprint">
  gem install jekyll
  gem install RedCloth
  cd /myStuff/my-git-rep/elasticsearch.github.com
  jekyll --server
</pre>

p. To see the local running site, use your favorite web browser and navigate to "http://localhost:4000":http://localhost:4000 or try
"http://localhost:4000/community/contributing-site.html":http://localhost:4000/community/contributing-site.html to see this page loaded from your local copy.
   
p. If you are a regular IDE user, don't worry about cluttering the git project with *Eclipse* or *IntelliJ IDEA* project files. The @.gitignore@ file already knows to skip @.project@, @.idea@ files, as well as the *jekyll* generated @_site@ directory tree. 

p. One useful variation that saves key strokes while changing files is to run *jekyll* automaticaly watching for changes to the source files.
<pre>
  jekyll --server --auto
</pre>

p. When you've tried your new pages and think the will help many people better understand ElasticSeach, don't forget to "add":http://gitref.org/basic/#add and "commit":http://gitref.org/basic/#commit your changes to your local repository. Consider pulling (fetching and merging upstream changes) to merge in other's helpful pages.  Eventually you'll want to "push":http://gitref.org/remotes/#push or publish to your fork on git-hub.  Add, commit and push are all supported by git integration in your favorite IDE (Eclipse using the "EGit":http://www.eclipse.org/egit/ plugin or IntelliJ using the "Git":http://wiki.jetbrains.net/intellij/Using_Git_Locally plugin).  

p. Don't forget the last step which is to make a "pull request":https://help.github.com/articles/using-pull-requests to the owners of elasticsearch.github.com.